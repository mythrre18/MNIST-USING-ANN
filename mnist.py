# -*- coding: utf-8 -*-
"""mnist

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jgbam1LKjvfERaruCVAjYrVm54tlI-5m
"""

import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical
from sklearn.model_selection import train_test_split

# 1. Load MNIST data
(x_train_full, y_train_full), (x_test, y_test) = mnist.load_data()

# 2. Normalize the data (convert pixel values to [0, 1])
x_train_full = x_train_full.astype('float32') / 255.0
x_test = x_test.astype('float32') / 255.0

x_train, x_val, y_train, y_val = train_test_split(
    x_train_full, y_train_full, test_size=0.2, random_state=42
)

import matplotlib.pyplot as plt
plt.imshow(x_train[0])

y_train = to_categorical(y_train, 10)
y_val = to_categorical(y_val, 10)
y_test = to_categorical(y_test, 10)

from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten
from tensorflow.keras.initializers import GlorotUniform, HeNormal
from tensorflow.keras.optimizers import SGD
model=Sequential()
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu',kernel_initializer=HeNormal()))
model.add(Dense(10,activation='softmax'))

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

model.summary()

model.fit(x_train, y_train,
          validation_data=(x_val, y_val),
          epochs=10,
          batch_size=32)

test_loss, test_acc = model.evaluate(x_test, y_test)
print(f"Test accuracy: {test_acc:.4f}")